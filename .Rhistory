write.csv(ExecutiveSummarydata, "summary.csv")
for(i in ExecutiveSummarydata$PlaygroundBooked){
if (i==0) {
ExecutiveSummarydata$PlaygroundRevenue[i]=0
}
}
for(i in ExecutiveSummarydata$EquipmentPurchased){
if (i==0) {
ExecutiveSummarydata$EquipmentRevenue[i]=0
}
}
View(ExecutiveSummarydata)
count=1
count=1
for (variable in ExecutiveSummarydata$PlaygroundBooked) {
count= count+1
if (variable==0) {
ExecutiveSummarydata$PlaygroundRevenue[count] =0
}
}
count=1
for (variable in ExecutiveSummarydata$PlaygroundBooked) {
count= count+1
if (variable==0) {
ExecutiveSummarydata$PlaygroundRevenue[count] =0
}
}
count=0
for (variable in ExecutiveSummarydata$PlaygroundBooked) {
count= count+1
if (variable==0) {
ExecutiveSummarydata$PlaygroundRevenue[count] =0
}
}
View(ExecutiveSummarydata)
count1=0
for (variable in ExecutiveSummarydata$EquipmentPurchased) {
count1= count1+1
if (variable==0) {
ExecutiveSummarydata$EquipmentRevenue[count1] =0
}
}
transactionId = seq(1:1000)
CustomerId = sample(1:400,1000,replace=TRUE)
ConversionType = sample(c("Email Marketing","Social Media", "Referrals", "Other Campaign","Direct", "Offline Sources"),1000,replace=TRUE)
ConversionCost = sample(c(10,25,50,75,100), 1000, replace = TRUE)
PlaygroundBooked = sample(0:1,1000, replace=TRUE)
EquipmentPurchased = sample(0:5,1000, replace= TRUE)
PlaygroundRevenue = sample(c(0,500,1000),1000,replace = TRUE)
EquipmentRevenue = sample(100:10000, 1000, replace = TRUE)
TotalRevenue = PlaygroundRevenue + EquipmentRevenue
ExecutiveSummarydata = data.frame(transactionId,CustomerId,
ConversionType,ConversionCost,PlaygroundBooked,
EquipmentPurchased,PlaygroundRevenue,EquipmentRevenue,TotalRevenue)
count=0
for (variable in ExecutiveSummarydata$PlaygroundBooked) {
count= count+1
if (variable==0) {
ExecutiveSummarydata$PlaygroundRevenue[count] =0
}
}
count1=0
for (variable in ExecutiveSummarydata$EquipmentPurchased) {
count1= count1+1
if (variable==0) {
ExecutiveSummarydata$EquipmentRevenue[count1] =0
}
}
TotalRevenue = PlaygroundRevenue + EquipmentRevenue
ExecutiveSummarydata$TotalRevenue = ExecutiveSummarydata$PlaygroundRevenue + ExecutiveSummarydata$EquipmentRevenue
write.csv(ExecutiveSummarydata, "summary.csv")
sum(ExecutiveSummarydata$TotalRevenue)
summarise(ExecutiveSummarydata)
source('C:/Users/mradu/Desktop/SOLAnalytics/CASESTUDY.R', echo=TRUE)
transactionId = seq(1:1000)
CustomerId = sample(1:400,1000,replace=TRUE)
ConversionType = sample(c("Email Marketing","Social Media", "Referrals", "Other Campaign","Direct", "Offline Sources"),1000,replace=TRUE)
ConversionCost = sample(c(10,25,50,75,100), 1000, replace = TRUE)
PlaygroundBooked = sample(0:1,1000, replace=TRUE)
EquipmentPurchased = sample(0:5,1000, replace= TRUE)
PlaygroundRevenue = sample(c(0,500,1000),1000,replace = TRUE)
EquipmentRevenue = sample(100:10000, 1000, replace = TRUE)
ExecutiveSummarydata = data.frame(transactionId,CustomerId,
ConversionType,ConversionCost,PlaygroundBooked,
EquipmentPurchased,PlaygroundRevenue,EquipmentRevenue,TotalRevenue)
TotalRevenue = PlaygroundRevenue + EquipmentRevenue
ExecutiveSummarydata = data.frame(transactionId,CustomerId,
ConversionType,ConversionCost,PlaygroundBooked,
EquipmentPurchased,PlaygroundRevenue,EquipmentRevenue,TotalRevenue)
count=0
for (variable in ExecutiveSummarydata$PlaygroundBooked) {
count= count+1
if (variable==0) {
ExecutiveSummarydata$PlaygroundRevenue[count] =0
}
}
count1=0
for (variable in ExecutiveSummarydata$EquipmentPurchased) {
count1= count1+1
if (variable==0) {
ExecutiveSummarydata$EquipmentRevenue[count1] =0
}
}
ExecutiveSummarydata$TotalRevenue = ExecutiveSummarydata$PlaygroundRevenue + ExecutiveSummarydata$EquipmentRevenue
write.csv(ExecutiveSummarydata, "summary1.csv")
sum(ExecutiveSummarydata$TotalRevenue)
summary(ExecutiveSummarydata)
sum(ExecutiveSummarydata$PlaygroundRevenue)
sum(ExecutiveSummarydata$TotalRevenue)
sum(ExecutiveSummarydata$EquipmentRevenue)
sum(ExecutiveSummarydata$ConversionCost)
sample(as.Date(2018/01): as.Date(2018/12),1000, replace = TRUE)
sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),1000. replace = TRUE)
sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),100, replace = TRUE)
dates<- sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),100, replace = TRUE)
ExecutiveSummarydata$Month <- dates
write.csv(ExecutiveSummarydata, "summary1.csv")
CustomerId <- seq(1:400)
PlaygroundBooked <- sample(c(0,1,2,3,4,5,6,7,8,9), 400, replace=TRUE)
EquipmentPurchased <- sample(0:20,400, replace=TRUE)
EquipmentReturned <- sample(0:5,400,replace = TRUE)
EquipmentPurchased <- sample(0:20,400, replace=TRUE)
PlayersMatched <- sample(0:10,400, replace = TRUE)
PlayersCancelled <- sample(0:10,400,replace = TRUE)
Cancellations<- sample(0:5,400,replace=TRUE)
BookingCancellations<- sample(0:5,400,replace=TRUE)
CusomerData <- data.frame(CustomerId,CustomerType, PlaygroundBooked, EquipmentPurchased,
PlayersMatched, BookingCancellations, EquipmentReturned)
CustomerType <- sample(c("Newly Active", "Active", "Inactive"),400, replace = TRUE)
CusomerData <- data.frame(CustomerId,CustomerType, PlaygroundBooked, EquipmentPurchased,
PlayersMatched, BookingCancellations, EquipmentReturned)
write.csv(CusomerData, "customerdata.csv")
x<-select(CusomerData, CustomerType == "Active")
x<-filter(CusomerData, CustomerType == "Active")
x
View(CusomerData)
)
x<-select_if(CusomerData, CustomerType == "Active")
x<-select(CusomerData, CustomerType == "Active")
library(dplyr)
x<-select(CusomerData, CustomerType == "Active")
x<-filter(CusomerData, CustomerType == "Active")
nrow(x)
x<-filter(CusomerData, CustomerType == "Newly Active")
nrow(x)
x<-filter(CusomerData, CustomerType == "Inactive")
nrow(x)
sum(CusomerData$PlaygroundBooked)
sum(CusomerData$BookingCancellations)
sum(CusomerData$EquipmentPurchased)
sum(CusomerData$EquipmentReturned)
sum(CusomerData$PlayersMatched)
PlayersCancelled <- sample(0:10,400,replace = TRUE)
CusomerData <- data.frame(CustomerId,CustomerType, PlaygroundBooked, EquipmentPurchased,
PlayersMatched, BookingCancellations, EquipmentReturned,PlayersCancelled)
write.csv(CusomerData, "customerdata.csv")
sum(CusomerData$PlayersCancelled)
dates<- sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),400, replace = TRUE)
CusomerData <- data.frame(CustomerId,dates,CustomerType, PlaygroundBooked, EquipmentPurchased,
PlayersMatched, BookingCancellations, EquipmentReturned,PlayersCancelled)
CusomerData <- data.frame(CustomerId,dates,CustomerType, PlaygroundBooked, EquipmentPurchased,
PlayersMatched, BookingCancellations, EquipmentReturned,PlayersCancelled)
write.csv(CusomerData, "customerdata.csv")
rating<- sample(1:5,1000,replace=TRUE)
inapptime <- sample(0.00:2.88,400, replace = TRUE)
complaintRaised <- seq(1:1, 1000)
complaintRaised <- rep(1,1000)
resolvetime <- sample(2:6, 1000, replace=TRUE)
rating<- sample(1:5,400,replace=TRUE)
dates<- sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),1000, replace = TRUE)
inapptime <- sample(0.00:4,400, replace = TRUE)
complaintRaised <- sample(1:5, 400, replace= TRUE)
dates<- sample(c("Jan","Feb","Mar","Apr","May","Jun","Jul", "Aug","Sep", "Oct","Nov","Dec"),400, replace = TRUE)
inapptime <- sample(0.00:4,400, replace = TRUE)
complaintRaised <- sample(1:5, 400, replace= TRUE)
resolvetime <- sample(2:6, 400, replace=TRUE)
x<- data.frame(rating,dates,complaintRaised,resolvetime, inapptime)
CustomerId <- seq(1:400)
x<- data.frame(CustomerId, rating,dates,complaintRaised,resolvetime, inapptime)
write.csv(CusomerData, "appperformance.csv")
write.csv(x, "appperformance.csv")
write.csv(x, "appperformance.csv")
mean(x$inapptime)
sum(x$complaintRaised)
mean(x$resolvetime)
sum(x$resolvetime)/sum(x$complaintRaised)
#Import data
install.packages("readxl")
library(readxl)
cust_agg_tran <- read_excel("cust agg transaction data.xlsx")
reference_file <- read_excel("Reference file.xlsx")
head(cust_agg_tran)
head(reference_file)
dummyx <- unique(reference_file$MemberCardNumber)
length(dummyx)
rm(dummyx)
dummyx <- unique(cust_agg_tran$customer_Number)
length(dummyx)
rm(dummyx)
orignalData <- cbind(cust_agg_tran[1:49811,], reference_file)
head(orignalData)
install("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
library(tidyr)
orignalData<-
orignalData %>% separate(Customer_Group, into=c("Customer_Group_Num", "Customer_Group"), sep= "\\.") %>%
separate(RevenueBand, into=c("RevenueBand_Num", "RevenueBand"), sep= "\\.")%>%
separate(InvoiceBand, into=c("InvoiceBand_Num", "InvoiceBand"), sep= "\\.") %>%
separate(Sampling, into=c("Sampling_Num", "Sampling"), sep= "\\.")
active_Customers<- filter(orignalData, Customer_Group=="ACTIVE")
act_TG_Customers <- filter(active_Customers, Sampling=="TG")
#From step 2, Select the customers
#whose Avg Transaction Value (Amount per bill) is
#above KD 25 in the transaction file
act_TG_Customers$AmountPerBill <- act_TG_Customers$TotalAmount/act_TG_Customers$billCount
act_TG_KD25_Customers <- filter(act_TG_Customers, AmountPerBill> 25.0)
todaydate <- Sys.Date()
RFM_act_TG_KD25 <- data.frame(customer_id = act_TG_KD25_Customers$customer_Number,
revenue = act_TG_KD25_Customers$TotalAmount,
most_recent_visit = act_TG_KD25_Customers$MaxTransactionDate,
number_of_orders = act_TG_KD25_Customers$billCount,
recency_days = difftime(todaydate, act_TG_KD25_Customers$MaxTransactionDate)
)
head(RFM_act_TG_KD25)
x<-unique((orignalData$Customer_Group))
x
unique((orignalData$Customer_Group))
analysis_date <- max(act_TG_KD25_Customers$MaxTransactionDate)
rfm_result <- rfm_table_customer(RFM_act_TG_KD25, customer_id, number_of_orders,
recency_days, revenue, analysis_date)
install.packages("rfm")
library(rfm)
rfm_result <- rfm_table_customer(RFM_act_TG_KD25, customer_id, number_of_orders,
recency_days, revenue, analysis_date)
head(rfm_result)
#The heat map shows the average monetary value for different categories of recency and frequency scores.
rfm_heatmap(rfm_result)
summary(rfm_result)
str(rfm_result)
head(rfm_result$rfm)
summary(rfm_result$rfm)
str(rfm_result$rfm)
#to generate the distribution of monetary scores for the different combinations of frequency and recency scores.
rfm_bar_chart(rfm_result)
# To examine the relative distribution of monetary value (total revenue generated by each customer)
#recency days (days since the most recent visit for each customer)
#frequency (transaction count for each customer)
rfm_histograms(rfm_result)
#Visualize the distribution of customers across orders.
rfm_order_dist(rfm_result)
#Recency vs Monetary Value
rfm_rm_plot(rfm_result)
#Frequency vs Monetary Value
rfm_fm_plot(rfm_result)
#Recency vs Frequency
rfm_rf_plot(rfm_result)
data1<- rfm_result$rfm
head(data1)
rm(data1)
rfm_data1<- data.frame(rfm_result$rfm)
head(rfm_data1)
rfm_data1 <- arrange(rfm_data1, rfm_data1$rfm_score, desc=TRUE)
rfm_data1<- data.frame(rfm_result$rfm)
head(rfm_data1)
rfm_data1 <- rfm_data1[order(-mpg),]
rfm_data1 <- rfm_data1[order(-rfm_score),]
head(rfm_data1)
str(rfm_data1)
rfm_data1 <- rfm_data1[order(-8),]
head(rfm_data1)
rfm_data1<- data.frame(rfm_result$rfm)
head(rfm_data1)
arrange(rfm_data1, desc(rfm_data1$rfm_score))
head(rfm_data1)
rfm_data1<-arrange(rfm_data1, desc(rfm_data1$rfm_score))
head(rfm_data1)
rfm_top50percent_data <- rfm_data1[1:nrow(rfm_data1$customer_id)/2,]
rfm_top50percent_data <- rfm_data1[1:(nrow(rfm_data1$customer_id)/2),]
a<- nrow(rfm_data1$customer_id)
a
a<- nrow(rfm_data1)
a
rfm_top50percent_data <- rfm_data1[1:(nrow(rfm_data1)/2),]
head(rfm_top50percent_data)
head(rfm_top50percent_data)
nrow(rfm_top50percent_data)
View(orignalData)
rg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount, Revenue) %>%
filter(customer_Number  %in% rfm_top50percent_data_RG$customer_id)
tg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount,Revenue) %>%
filter( customer_Number %in% rfm_top50percent_data_TG$customer_id)
library(readxl)
library(dplyr)
library(tidyr)
library(rfm)
cust_agg_tran <- read_excel("cust agg transaction data.xlsx")
reference_file <- read_excel("Reference file.xlsx")
head(cust_agg_tran)
head(reference_file)
orignalData <- cbind(cust_agg_tran[1:49811,], reference_file)
head(orignalData)
orignalData<-
orignalData %>% separate(Customer_Group, into=c("Customer_Group_Num", "Customer_Group"), sep= "\\.") %>%
separate(RevenueBand, into=c("RevenueBand_Num", "RevenueBand"), sep= "\\.")%>%
separate(InvoiceBand, into=c("InvoiceBand_Num", "InvoiceBand"), sep= "\\.") %>%
separate(Sampling, into=c("Sampling_Num", "Sampling"), sep= "\\.")
active_Customers<- filter(orignalData, Customer_Group=="ACTIVE")
act_TG_Customers <- filter(active_Customers, Sampling=="TG")
#From step 2, Select the customers
#whose Avg Transaction Value (Amount per bill) is
#above KD 25 in the transaction file
act_TG_Customers$AmountPerBill <- act_TG_Customers$TotalAmount/act_TG_Customers$billCount
act_TG_KD25_Customers <- filter(act_TG_Customers, AmountPerBill> 25.0)
todaydate <- Sys.Date()
RFM_act_TG_KD25 <- data.frame(customer_id = act_TG_KD25_Customers$customer_Number,
revenue = act_TG_KD25_Customers$TotalAmount,
most_recent_visit = act_TG_KD25_Customers$MaxTransactionDate,
number_of_orders = act_TG_KD25_Customers$billCount,
recency_days = difftime(todaydate, act_TG_KD25_Customers$MaxTransactionDate)
)
head(RFM_act_TG_KD25)
unique((orignalData$Customer_Group))
analysis_date <- max(act_TG_KD25_Customers$MaxTransactionDate)
rfm_result <- rfm_table_customer(RFM_act_TG_KD25, customer_id, number_of_orders,
recency_days, revenue, analysis_date)
rfm_data1<- data.frame(rfm_result$rfm)
head(rfm_data1)
rfm_data1<-arrange(rfm_data1, desc(rfm_data1$rfm_score))
head(rfm_data1)
###########
rfm_top50percent_data_TG <- rfm_data1[1:(nrow(rfm_data1)/2),]
head(rfm_top50percent_data_TG)
nrow(rfm_top50percent_data_TG)
########### VISUALIZATONS FOR RFM ANALYSIS
#The heat map shows the average monetary value for different categories of recency and frequency scores.
rfm_heatmap(rfm_result)
#to generate the distribution of monetary scores for the different combinations of frequency and recency scores.
rfm_bar_chart(rfm_result)
#Visualize the distribution of customers across orders.
rfm_order_dist(rfm_result)
#Recency vs Monetary Value
rfm_rm_plot(rfm_result)
#Recency vs Frequency
rfm_rf_plot(rfm_result)
head(active_rg_KD25_data)
todaydate <- Sys.Date()
RFM_act_RG_KD25 <- data.frame(customer_id = active_rg_KD25_data$customer_Number,
revenue = active_rg_KD25_data$TotalAmount,
most_recent_visit = active_rg_KD25_data$MaxTransactionDate,
number_of_orders = active_rg_KD25_data$billCount,
recency_days = difftime(todaydate, active_rg_KD25_data$MaxTransactionDate)
)
analysis_date <- max(active_rg_KD25_data$MaxTransactionDate)
########### VISUALIZATONS FOR RFM ANALYSIS
#The heat map shows the average monetary value for different categories of recency and frequency scores.
rfm_heatmap(rfm_result)
#to generate the distribution of monetary scores for the different combinations of frequency and recency scores.
rfm_bar_chart(rfm_result)
#Recency vs Frequency
rfm_rf_plot(rfm_result)
head(rfm_data2)
head(rfm_data2)
rfm_top50percent_data_RG <- rfm_data2[1:(nrow(rfm_data2)/2),]
head(rfm_top50percent_data_RG)
nrow(rfm_top50percent_data_TG)
rg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount, Revenue) %>%
filter(customer_Number  %in% rfm_top50percent_data_RG$customer_id)
tg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount,Revenue) %>%
filter( customer_Number %in% rfm_top50percent_data_TG$customer_id)
table(rg_data$RevenueBand)
nrow(rfm_top50percent_data_RG)
#Frequency vs Monetary Value
rfm_fm_plot(rfm_result)
rfm_data2<-arrange(rfm_data2, desc(rfm_data2$rfm_score))
rfm_result_RG <- rfm_table_customer(RFM_act_RG_KD25, customer_id, number_of_orders,
recency_days, revenue, analysis_date)
active_rg_KD25_data <- filter(active_Customers, Sampling=="RG"
& (TotalAmount/billCount)>25.0)
# To examine the relative distribution of monetary value (total revenue generated by each customer)
#recency days (days since the most recent visit for each customer)
#frequency (transaction count for each customer)
rfm_histograms(rfm_result)
#Recency vs Monetary Value
rfm_rm_plot(rfm_result)
#Frequency vs Monetary Value
rfm_fm_plot(rfm_result)
head(RFM_act_RG_KD25)
#Visualize the distribution of customers across orders.
rfm_order_dist(rfm_result)
head(rfm_top50percent_data_TG)
# To examine the relative distribution of monetary value (total revenue generated by each customer)
#recency days (days since the most recent visit for each customer)
#frequency (transaction count for each customer)
rfm_histograms(rfm_result)
############
rfm_data2<- data.frame(rfm_result_RG$rfm)
table(tg_data$RevenueBand)
table(rg_data$RevenueBand)
rg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount, Revenue) %>%
filter(customer_Number  %in% rfm_top50percent_data_RG$customer_id)
active_rg_KD25_data <- filter(active_Customers, Sampling=="RG"
& (TotalAmount/billCount)>25.0)
head(active_rg_KD25_data)
todaydate <- Sys.Date()
RFM_act_RG_KD25 <- data.frame(customer_id = active_rg_KD25_data$customer_Number,
revenue = active_rg_KD25_data$TotalAmount,
most_recent_visit = active_rg_KD25_data$MaxTransactionDate,
number_of_orders = active_rg_KD25_data$billCount,
recency_days = difftime(todaydate, active_rg_KD25_data$MaxTransactionDate)
)
head(RFM_act_RG_KD25)
analysis_date <- max(active_rg_KD25_data$MaxTransactionDate)
rfm_result_RG <- rfm_table_customer(RFM_act_RG_KD25, customer_id, number_of_orders,
recency_days, revenue, analysis_date)
########### VISUALIZATONS FOR RFM ANALYSIS
#The heat map shows the average monetary value for different categories of recency and frequency scores.
rfm_heatmap(rfm_result)
#to generate the distribution of monetary scores for the different combinations of frequency and recency scores.
rfm_bar_chart(rfm_result)
# To examine the relative distribution of monetary value (total revenue generated by each customer)
#recency days (days since the most recent visit for each customer)
#frequency (transaction count for each customer)
rfm_histograms(rfm_result)
#Visualize the distribution of customers across orders.
rfm_order_dist(rfm_result)
#Recency vs Monetary Value
rfm_rm_plot(rfm_result)
############
rfm_data2<- data.frame(rfm_result_RG$rfm)
head(rfm_data2)
rfm_data2<-arrange(rfm_data2, desc(rfm_data2$rfm_score))
head(rfm_data2)
rfm_top50percent_data_RG <- rfm_data2[1:(nrow(rfm_data2)/2),]
head(rfm_top50percent_data_RG)
head(rfm_top50percent_data_TG)
nrow(rfm_top50percent_data_RG)
nrow(rfm_top50percent_data_TG)
rg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount, Revenue) %>%
filter(customer_Number  %in% rfm_top50percent_data_RG$customer_id)
tg_data <- orignalData %>% select(customer_Number, RevenueBand,TotalAmount,Revenue) %>%
filter( customer_Number %in% rfm_top50percent_data_TG$customer_id)
table(rg_data$RevenueBand)
table(tg_data$RevenueBand)
rg_25to50  <-  filter(rg_data, rg_data$RevenueBand == "25-50")
rg_50to75  <-  filter(rg_data, rg_data$RevenueBand == "50-75")
rg_Above75 <- filter(rg_data, rg_data$RevenueBand == "Above 75")
rg_Below25 <- filter(rg_data, rg_data$RevenueBand == "Below 25")
tg_25to50  <-  filter(tg_data, tg_data$RevenueBand == "25-50")
tg_50to75  <-  filter(tg_data, tg_data$RevenueBand == "50-75")
tg_Above75 <- filter(tg_data, tg_data$RevenueBand == "Above 75")
tg_Below25 <- filter(tg_data, tg_data$RevenueBand == "Below 25")
set.seed(420)
tg_25to50_sample = sample_n(tg_25to50, 2450)
set.seed(420)
tg_50to75_sample = sample_n(tg_50to75, 2950)
set.seed(420)
tg_Above75_sample = sample_n(tg_Above75, 3660)
set.seed(420)
tg_Below25_sample = sample_n(tg_Below25, 2120)
tg_data_sample <- rbind(tg_25to50_sample,tg_50to75_sample,tg_Above75_sample,tg_Below25_sample)
t.test(tg_data_sample$TotalAmount,rg_data$TotalAmount)
################################    Step 7    #######################
rg<- table(rg_data$RevenueBand)
tg<-table(tg_data$RevenueBand)
rg<-transform(rg)
tg<-transform(tg)
rg_tg<-cbind(rg,tg)
head(rg_data)
head(tg_data)
rg_25to50  <-  filter(rg_data, rg_data$RevenueBand == "25-50")
rg_50to75  <-  filter(rg_data, rg_data$RevenueBand == "50-75")
rg_Above75 <- filter(rg_data, rg_data$RevenueBand == "Above 75")
rg_Below25 <- filter(rg_data, rg_data$RevenueBand == "Below 25")
tg_25to50  <-  filter(tg_data, tg_data$RevenueBand == "25-50")
tg_50to75  <-  filter(tg_data, tg_data$RevenueBand == "50-75")
tg_Above75 <- filter(tg_data, tg_data$RevenueBand == "Above 75")
tg_Below25 <- filter(tg_data, tg_data$RevenueBand == "Below 25")
set.seed(420)
tg_25to50_sample = sample_n(tg_25to50, 2450)
set.seed(420)
tg_50to75_sample = sample_n(tg_50to75, 2950)
set.seed(420)
tg_Above75_sample = sample_n(tg_Above75, 3660)
set.seed(420)
tg_Below25_sample = sample_n(tg_Below25, 2120)
tg_data_sample <- rbind(tg_25to50_sample,tg_50to75_sample,tg_Above75_sample,tg_Below25_sample)
t.test(tg_data_sample$TotalAmount,rg_data$TotalAmount)
################################    Step 7    #######################
rg<- table(rg_data$RevenueBand)
tg<-table(tg_data$RevenueBand)
rg<-transform(rg)
tg<-transform(tg)
rg_tg<-cbind(rg,tg)
names(rg_tg)[1]<-"Revenue_Band"
names(rg_tg)[2]<- "RG_total_customers"
names(rg_tg)[4]<- "TG_total_customers"
rg_tg <- rg_tg[,-3]
rg_tg$TG_AvgAmountPerMember <- c(sum(tg_25to50$Revenue)/nrow(tg_25to50),
sum(tg_50to75$TotalAmount)/nrow(tg_50to75),
sum(tg_Above75$TotalAmount)/nrow(tg_Above75),
sum(tg_Below25$TotalAmount)/nrow(tg_Below25))
rg_tg$TG_AvgAmountPerMember <- c(sum(tg_25to50$Revenue)/nrow(tg_25to50),
sum(tg_50to75$Revenue)/nrow(tg_50to75),
sum(tg_Above75$Revenue)/nrow(tg_Above75),
sum(tg_Below25$Revenue)/nrow(tg_Below25))
rg_tg$RG_AvgAmountPerMember <- c(sum(rg_25to50$Revenue)/nrow(rg_25to50),
sum(rg_50to75$Revenue)/nrow(rg_50to75),
sum(rg_Above75$Revenue)/nrow(rg_Above75),
sum(rg_Below25$Revenue)/nrow(rg_Below25))
rg_tg
